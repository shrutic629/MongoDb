1. Group users by role and calculate the average salary for each role.

    db.users.aggregate
    (
        [
            {
            $group: {
                _id: "$role",
            averageSal:{$avg:"$salary"}

            }
            }
        ]
    )

2. Group users by city and find the total number of users in each city.

db.users.aggregate
(
    [
        {
        $group: {
            _id: "$city",
        usercount:{$sum:1}
            
        }
        }
    ]
)

3. Group users by gender and determine the average age for each gender.

db.users.aggregate
(
    [
        {
        $group: {
            _id: "$gender",
        averageAge:{$avg:"$age"}
            
        }
        }
    ]
)

4.Group users by gender and determine the average salary for each gender.

db.users.aggregate
(
    [
        {
        $group: {
            _id: "$gender",
        averageSalary:{$avg:"$salary"}
            
        }
        }
    ]
)

5. Group users by role and city, and calculate the total salary for each subgroup.

db.users.aggregate
(
    [
        {
        $group: {
            _id: {role:"$role",city:"$city"},
        totalSalary:{$sum:"$salary"}
            
        }
        }
    ]
)

6.Group users by gender and city, and calculate the average salary for each subgroup.

//composite key:is the combination of more than one object keys.
----------------------------------------------------------------
db.users.aggregate
(
    [
        {
        $group: {
            _id: {gender:"$gender",city:"$city"},
        averageSal:{$avg:"$salary"}
            
        }
        }
    ]
)

7.Group users by gender and city, and find the maximum salary in each subgroup.

db.users.aggregate
(
    [
        {
            $group: {
            _id: {gender:"$gender",city:"$city"},
            maxSalary:{$max:"$salary"}
            
            }
        }
    ]
)

8.Group users by skills and count how many users have each skill.

db.users.aggregate
(
    [
        {
            $unwind: "$skills",
        },
        {
            $group: {
            _id: "$skills",
            UsersWithSkills:{$sum:1},
            users:{$push:"$$ROOT"}
            
            }
        }
    ]
)

9.Group users by skills and what is the average salary of each skill.

db.users.aggregate
(
    [
        {
            $unwind: "$skills"
        },
        {
            $group: {
            _id: "$skills",
            averageSal:{$avg:"$salary"}
            
            }
        }
    ]
)

10.Group users by role and find the minimum age for each role.

db.users.aggregate
(
    [
        {
            $group: {
            _id: "$role",
            minAge:{$min:"$age"}
            
            }
        }
    ]
)

11.Group users by city and gender, and calculate the average salary for each subgroup.

db.users.aggregate
(
    [
        {
            $group: {
            _id: {city:"$city",gender:"$gender"},
            avgSalary:{$avg:"$salary"}

            }
        }
    ]
)

12.Group users by role and determine the total number of unique cities for each role.

db.users.aggregate
(
    [
        {
        $group: {
            _id: "$role",
        uniqueCity:{$addToSet:"$city"}
            
        }
        },
        {
            $project: {
            total:{$size:"$uniqueCity"}
            }
        }
    ]
)

13.Group users by age and count the number of users in each age group.

db.users.aggregate
(
    [
	{
	  $group: {
	    _id: "$age",
      userCount:{$sum:1}
	    
	  }
	}
]
)

***********************************************************************************


11. Group users by city and calculate the average number of skills per user in each city.

db.users.aggregate
(
    [
        {
            $project: {
            city:1,
            numberOfSkills:{$size:"$skills"}
            }
        },
        {
            $group: {
            _id: "$city",
            averageSkills:{$avg:"$numberOfSkills"}
            
            }
        },
        {
            $project: {
            city:"$_id",
            averageSkills:1
            }
        }
    ]
)

12. Group users by role and find the highest salary in each role.

db.users.aggregate
(
    [
        {
            $group: {
            _id: "$role",
            maxSalary:{$max:"$salary"}
            
            }
        }
    ]
)

13. Group users by gender and calculate the total number of users for each gender.

db.users.aggregate
(
    [
        {
            $group: {
            _id: "$gender",
            userCount:{$sum:1}
            
            }
        }
    ]
)

14. Group users by city and determine the average age for users in each city.

db.users.aggregate
(
    [
        {
            $group: {
            _id: "$city",
            averageAge:{$avg:"$age"}
            
            }
        }
    ]
)

15. Group users by role and gender, and calculate the average salary for each subgroup.

db.users.aggregate
(
    [
        {
            $group: {
            _id: {role:"$role",gender:"$gender"},
            avgSalary:{$avg:"$salary"}
            
            }
        },
        {
            $project: {
            role:"$_id.role",
            gender:"$_id.gender",
            avgSalary:1
            }
        }
    ]
)

16.Group users by skills and determine the total number of users for each skill.

db.users.aggregate
(
    [
        {
            $unwind: "$skills"
        },
        {
            $group: {
            _id: "$skills",
            totalUsers:{$sum:1}
            }
        },
        {
            $project: {
            skills:"$_id",
            totalUsers:1
            }
        }
    ]
)

17.Group users by age and find the maximum salary for each age group.

db.users.aggregate
(
    [
        {
            $group: {
            _id: "$age",
            maxSalary:{$max:"$salary"}

            }
        },
        {
            $project: {
            age:"$_id",
            maxSalary:1
            }
        }
    ]
)

18.Group users by role and calculate the total number of users with more than three skills.

db.users.aggregate
(
    [
            {
            $project: {
                role:1,
            noOfSkills:{$size:"$skills"}
            }
            },
        {
            $match: {
            noOfSkills:{$gt:3}
            }
        },
        {
            $group: {
            _id: "$role",
            totalUsers:{$sum:1}
            }
        },
        {
            $project: {
            role:"$_id",
            totalUsers:1
            }
        }
    ]
)

19.Group users by gender and city, and find the average number of skills per user in each subgroup.

db.users.aggregate
(
    [
        {
        $project: {
            gender:1,
        city:1,
        noofSkills:{$size:"$skills"}
        }
        },
    {
        $group: {
        _id: {gender:"$gender",city:"$city"},
        avgSkills:{$avg:"$noofSkills"}
        
        }
    },
    {
        $project: {
        gender:"$_id.gender",
        city:"$_id.city",
        avgSkills:1
        }
    }
    ]
)

20.Group users by role and determine the highest and lowest salaries for each role.

db.users.aggregate
(
    [
        {
            $group: {
            _id: "$role",
            highestSalary:{$max:"$salary"},
            lowestSalary:{$min:"$salary"}

            }
        }
    ]
)

*****************************************************************

1.Group users by city and find the average number of users per role in each city.

db.users.aggregate
(
    [
        {
            $group: {
            _id: {city:"$city",role:"$role"},
            usercount:{$sum:1}
            
            }
        },
        {
            $group: {
            _id: "$_id.city",
            avguserCount:{$avg:"$usercount"}

            }
        },
        {
            $project: {
            city:"$_id",
            avguserCount:1
            }
        }
    ]
)

2. Group users by role and gender, and calculate the total salary for each subgroup.

db.users.aggregate
(
    [
        {
            $group: {
            _id: {role:"$role",gender:"$gender"},
            totalSal:{$sum:"$salary"}

            }
        }
    ]
)

3. Group users by age and determine the total number of users with a salary above 1,000,000.

db.users.aggregate
(
    [
        {
            $match: {
            salary:{$gt:100000}
            }
        },
        {
            $group: {
            _id: "$age",
            userCount:{$sum:1}
            
            }
        }
    ]
)

4. Group users by skills and find the average salary for users with each skill.

db.users.aggregate
(
    [
        {
            $unwind: "$skills"
        },
        {
            $group: {
            _id: "$skills",
            avgSal:{$avg:"$salary"}
            
            }
        }
    ]
)

5. Group users by role and city, and find the average age for each subgroup.

db.users.aggregate
(
    [
        {
        $group: {
            _id: {role:"$role",city:"$city"},
        avgAge:{$avg:"$age"}
            
        }
        }
    ]
)

6. Group users by gender and calculate the total number of users with Java as a skill.

db.users.aggregate
(
    [
            {
            $match: {
                skills:"Java"
            }
            },
        {
            $group: {
            _id: "$gender",
            usercount:{$sum:1}
            
            }
        },
        {
            $project: {
            gender:"$_id",
            usercount:1
            }
        }
    ]
)

7. Group users by city and determine the maximum number of skills any user in each city possesses.

db.users.aggregate
(
    [
        {
            $group: {
            _id: "$city",
            maxSkills:{$max:"$skills"}

            }
        }
    ]
)

8. Group users by role and calculate the total number of users for each role with Python as a skill.

db.users.aggregate
(
    [
            {
            $match: {
                skills:"Python"
            }
            },
        {
            $group: {
            _id: "$role",
            UsercountwithPythonSkill:{$sum:1}
            
            }
        },
        {
            $project: {
            role:"$_id",
            UsercountwithPythonSkill:1
            }
        }
    ]
)


9. Group users by gender and city, and find the average salary for users in each subgroup with more than two skills.

db.users.aggregate
(

)

10. Group users by age and determine the average number of skills per user in each age group.

db.users.aggregate
(
    
)


